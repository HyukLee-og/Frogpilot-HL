#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3585317521272958006) {
   out_3585317521272958006[0] = 0;
   out_3585317521272958006[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3585317521272958006[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3585317521272958006[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3585317521272958006[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3585317521272958006[5] = -sin(in_vec[1]);
   out_3585317521272958006[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3585317521272958006[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3585317521272958006[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3585317521272958006[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3585317521272958006[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3585317521272958006[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3585317521272958006[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3585317521272958006[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3585317521272958006[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3585317521272958006[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3585317521272958006[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3585317521272958006[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5894257164096913053) {
   out_5894257164096913053[0] = delta_x[0] + nom_x[0];
   out_5894257164096913053[1] = delta_x[1] + nom_x[1];
   out_5894257164096913053[2] = delta_x[2] + nom_x[2];
   out_5894257164096913053[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5894257164096913053[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5894257164096913053[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5894257164096913053[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5894257164096913053[7] = delta_x[6] + nom_x[7];
   out_5894257164096913053[8] = delta_x[7] + nom_x[8];
   out_5894257164096913053[9] = delta_x[8] + nom_x[9];
   out_5894257164096913053[10] = delta_x[9] + nom_x[10];
   out_5894257164096913053[11] = delta_x[10] + nom_x[11];
   out_5894257164096913053[12] = delta_x[11] + nom_x[12];
   out_5894257164096913053[13] = delta_x[12] + nom_x[13];
   out_5894257164096913053[14] = delta_x[13] + nom_x[14];
   out_5894257164096913053[15] = delta_x[14] + nom_x[15];
   out_5894257164096913053[16] = delta_x[15] + nom_x[16];
   out_5894257164096913053[17] = delta_x[16] + nom_x[17];
   out_5894257164096913053[18] = delta_x[17] + nom_x[18];
   out_5894257164096913053[19] = delta_x[18] + nom_x[19];
   out_5894257164096913053[20] = delta_x[19] + nom_x[20];
   out_5894257164096913053[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5254837349202704713) {
   out_5254837349202704713[0] = -nom_x[0] + true_x[0];
   out_5254837349202704713[1] = -nom_x[1] + true_x[1];
   out_5254837349202704713[2] = -nom_x[2] + true_x[2];
   out_5254837349202704713[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5254837349202704713[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5254837349202704713[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5254837349202704713[6] = -nom_x[7] + true_x[7];
   out_5254837349202704713[7] = -nom_x[8] + true_x[8];
   out_5254837349202704713[8] = -nom_x[9] + true_x[9];
   out_5254837349202704713[9] = -nom_x[10] + true_x[10];
   out_5254837349202704713[10] = -nom_x[11] + true_x[11];
   out_5254837349202704713[11] = -nom_x[12] + true_x[12];
   out_5254837349202704713[12] = -nom_x[13] + true_x[13];
   out_5254837349202704713[13] = -nom_x[14] + true_x[14];
   out_5254837349202704713[14] = -nom_x[15] + true_x[15];
   out_5254837349202704713[15] = -nom_x[16] + true_x[16];
   out_5254837349202704713[16] = -nom_x[17] + true_x[17];
   out_5254837349202704713[17] = -nom_x[18] + true_x[18];
   out_5254837349202704713[18] = -nom_x[19] + true_x[19];
   out_5254837349202704713[19] = -nom_x[20] + true_x[20];
   out_5254837349202704713[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_329589871290340028) {
   out_329589871290340028[0] = 1.0;
   out_329589871290340028[1] = 0;
   out_329589871290340028[2] = 0;
   out_329589871290340028[3] = 0;
   out_329589871290340028[4] = 0;
   out_329589871290340028[5] = 0;
   out_329589871290340028[6] = 0;
   out_329589871290340028[7] = 0;
   out_329589871290340028[8] = 0;
   out_329589871290340028[9] = 0;
   out_329589871290340028[10] = 0;
   out_329589871290340028[11] = 0;
   out_329589871290340028[12] = 0;
   out_329589871290340028[13] = 0;
   out_329589871290340028[14] = 0;
   out_329589871290340028[15] = 0;
   out_329589871290340028[16] = 0;
   out_329589871290340028[17] = 0;
   out_329589871290340028[18] = 0;
   out_329589871290340028[19] = 0;
   out_329589871290340028[20] = 0;
   out_329589871290340028[21] = 0;
   out_329589871290340028[22] = 1.0;
   out_329589871290340028[23] = 0;
   out_329589871290340028[24] = 0;
   out_329589871290340028[25] = 0;
   out_329589871290340028[26] = 0;
   out_329589871290340028[27] = 0;
   out_329589871290340028[28] = 0;
   out_329589871290340028[29] = 0;
   out_329589871290340028[30] = 0;
   out_329589871290340028[31] = 0;
   out_329589871290340028[32] = 0;
   out_329589871290340028[33] = 0;
   out_329589871290340028[34] = 0;
   out_329589871290340028[35] = 0;
   out_329589871290340028[36] = 0;
   out_329589871290340028[37] = 0;
   out_329589871290340028[38] = 0;
   out_329589871290340028[39] = 0;
   out_329589871290340028[40] = 0;
   out_329589871290340028[41] = 0;
   out_329589871290340028[42] = 0;
   out_329589871290340028[43] = 0;
   out_329589871290340028[44] = 1.0;
   out_329589871290340028[45] = 0;
   out_329589871290340028[46] = 0;
   out_329589871290340028[47] = 0;
   out_329589871290340028[48] = 0;
   out_329589871290340028[49] = 0;
   out_329589871290340028[50] = 0;
   out_329589871290340028[51] = 0;
   out_329589871290340028[52] = 0;
   out_329589871290340028[53] = 0;
   out_329589871290340028[54] = 0;
   out_329589871290340028[55] = 0;
   out_329589871290340028[56] = 0;
   out_329589871290340028[57] = 0;
   out_329589871290340028[58] = 0;
   out_329589871290340028[59] = 0;
   out_329589871290340028[60] = 0;
   out_329589871290340028[61] = 0;
   out_329589871290340028[62] = 0;
   out_329589871290340028[63] = 0;
   out_329589871290340028[64] = 0;
   out_329589871290340028[65] = 0;
   out_329589871290340028[66] = -0.5*state[4];
   out_329589871290340028[67] = -0.5*state[5];
   out_329589871290340028[68] = -0.5*state[6];
   out_329589871290340028[69] = 0;
   out_329589871290340028[70] = 0;
   out_329589871290340028[71] = 0;
   out_329589871290340028[72] = 0;
   out_329589871290340028[73] = 0;
   out_329589871290340028[74] = 0;
   out_329589871290340028[75] = 0;
   out_329589871290340028[76] = 0;
   out_329589871290340028[77] = 0;
   out_329589871290340028[78] = 0;
   out_329589871290340028[79] = 0;
   out_329589871290340028[80] = 0;
   out_329589871290340028[81] = 0;
   out_329589871290340028[82] = 0;
   out_329589871290340028[83] = 0;
   out_329589871290340028[84] = 0;
   out_329589871290340028[85] = 0;
   out_329589871290340028[86] = 0;
   out_329589871290340028[87] = 0.5*state[3];
   out_329589871290340028[88] = 0.5*state[6];
   out_329589871290340028[89] = -0.5*state[5];
   out_329589871290340028[90] = 0;
   out_329589871290340028[91] = 0;
   out_329589871290340028[92] = 0;
   out_329589871290340028[93] = 0;
   out_329589871290340028[94] = 0;
   out_329589871290340028[95] = 0;
   out_329589871290340028[96] = 0;
   out_329589871290340028[97] = 0;
   out_329589871290340028[98] = 0;
   out_329589871290340028[99] = 0;
   out_329589871290340028[100] = 0;
   out_329589871290340028[101] = 0;
   out_329589871290340028[102] = 0;
   out_329589871290340028[103] = 0;
   out_329589871290340028[104] = 0;
   out_329589871290340028[105] = 0;
   out_329589871290340028[106] = 0;
   out_329589871290340028[107] = 0;
   out_329589871290340028[108] = -0.5*state[6];
   out_329589871290340028[109] = 0.5*state[3];
   out_329589871290340028[110] = 0.5*state[4];
   out_329589871290340028[111] = 0;
   out_329589871290340028[112] = 0;
   out_329589871290340028[113] = 0;
   out_329589871290340028[114] = 0;
   out_329589871290340028[115] = 0;
   out_329589871290340028[116] = 0;
   out_329589871290340028[117] = 0;
   out_329589871290340028[118] = 0;
   out_329589871290340028[119] = 0;
   out_329589871290340028[120] = 0;
   out_329589871290340028[121] = 0;
   out_329589871290340028[122] = 0;
   out_329589871290340028[123] = 0;
   out_329589871290340028[124] = 0;
   out_329589871290340028[125] = 0;
   out_329589871290340028[126] = 0;
   out_329589871290340028[127] = 0;
   out_329589871290340028[128] = 0;
   out_329589871290340028[129] = 0.5*state[5];
   out_329589871290340028[130] = -0.5*state[4];
   out_329589871290340028[131] = 0.5*state[3];
   out_329589871290340028[132] = 0;
   out_329589871290340028[133] = 0;
   out_329589871290340028[134] = 0;
   out_329589871290340028[135] = 0;
   out_329589871290340028[136] = 0;
   out_329589871290340028[137] = 0;
   out_329589871290340028[138] = 0;
   out_329589871290340028[139] = 0;
   out_329589871290340028[140] = 0;
   out_329589871290340028[141] = 0;
   out_329589871290340028[142] = 0;
   out_329589871290340028[143] = 0;
   out_329589871290340028[144] = 0;
   out_329589871290340028[145] = 0;
   out_329589871290340028[146] = 0;
   out_329589871290340028[147] = 0;
   out_329589871290340028[148] = 0;
   out_329589871290340028[149] = 0;
   out_329589871290340028[150] = 0;
   out_329589871290340028[151] = 0;
   out_329589871290340028[152] = 0;
   out_329589871290340028[153] = 1.0;
   out_329589871290340028[154] = 0;
   out_329589871290340028[155] = 0;
   out_329589871290340028[156] = 0;
   out_329589871290340028[157] = 0;
   out_329589871290340028[158] = 0;
   out_329589871290340028[159] = 0;
   out_329589871290340028[160] = 0;
   out_329589871290340028[161] = 0;
   out_329589871290340028[162] = 0;
   out_329589871290340028[163] = 0;
   out_329589871290340028[164] = 0;
   out_329589871290340028[165] = 0;
   out_329589871290340028[166] = 0;
   out_329589871290340028[167] = 0;
   out_329589871290340028[168] = 0;
   out_329589871290340028[169] = 0;
   out_329589871290340028[170] = 0;
   out_329589871290340028[171] = 0;
   out_329589871290340028[172] = 0;
   out_329589871290340028[173] = 0;
   out_329589871290340028[174] = 0;
   out_329589871290340028[175] = 1.0;
   out_329589871290340028[176] = 0;
   out_329589871290340028[177] = 0;
   out_329589871290340028[178] = 0;
   out_329589871290340028[179] = 0;
   out_329589871290340028[180] = 0;
   out_329589871290340028[181] = 0;
   out_329589871290340028[182] = 0;
   out_329589871290340028[183] = 0;
   out_329589871290340028[184] = 0;
   out_329589871290340028[185] = 0;
   out_329589871290340028[186] = 0;
   out_329589871290340028[187] = 0;
   out_329589871290340028[188] = 0;
   out_329589871290340028[189] = 0;
   out_329589871290340028[190] = 0;
   out_329589871290340028[191] = 0;
   out_329589871290340028[192] = 0;
   out_329589871290340028[193] = 0;
   out_329589871290340028[194] = 0;
   out_329589871290340028[195] = 0;
   out_329589871290340028[196] = 0;
   out_329589871290340028[197] = 1.0;
   out_329589871290340028[198] = 0;
   out_329589871290340028[199] = 0;
   out_329589871290340028[200] = 0;
   out_329589871290340028[201] = 0;
   out_329589871290340028[202] = 0;
   out_329589871290340028[203] = 0;
   out_329589871290340028[204] = 0;
   out_329589871290340028[205] = 0;
   out_329589871290340028[206] = 0;
   out_329589871290340028[207] = 0;
   out_329589871290340028[208] = 0;
   out_329589871290340028[209] = 0;
   out_329589871290340028[210] = 0;
   out_329589871290340028[211] = 0;
   out_329589871290340028[212] = 0;
   out_329589871290340028[213] = 0;
   out_329589871290340028[214] = 0;
   out_329589871290340028[215] = 0;
   out_329589871290340028[216] = 0;
   out_329589871290340028[217] = 0;
   out_329589871290340028[218] = 0;
   out_329589871290340028[219] = 1.0;
   out_329589871290340028[220] = 0;
   out_329589871290340028[221] = 0;
   out_329589871290340028[222] = 0;
   out_329589871290340028[223] = 0;
   out_329589871290340028[224] = 0;
   out_329589871290340028[225] = 0;
   out_329589871290340028[226] = 0;
   out_329589871290340028[227] = 0;
   out_329589871290340028[228] = 0;
   out_329589871290340028[229] = 0;
   out_329589871290340028[230] = 0;
   out_329589871290340028[231] = 0;
   out_329589871290340028[232] = 0;
   out_329589871290340028[233] = 0;
   out_329589871290340028[234] = 0;
   out_329589871290340028[235] = 0;
   out_329589871290340028[236] = 0;
   out_329589871290340028[237] = 0;
   out_329589871290340028[238] = 0;
   out_329589871290340028[239] = 0;
   out_329589871290340028[240] = 0;
   out_329589871290340028[241] = 1.0;
   out_329589871290340028[242] = 0;
   out_329589871290340028[243] = 0;
   out_329589871290340028[244] = 0;
   out_329589871290340028[245] = 0;
   out_329589871290340028[246] = 0;
   out_329589871290340028[247] = 0;
   out_329589871290340028[248] = 0;
   out_329589871290340028[249] = 0;
   out_329589871290340028[250] = 0;
   out_329589871290340028[251] = 0;
   out_329589871290340028[252] = 0;
   out_329589871290340028[253] = 0;
   out_329589871290340028[254] = 0;
   out_329589871290340028[255] = 0;
   out_329589871290340028[256] = 0;
   out_329589871290340028[257] = 0;
   out_329589871290340028[258] = 0;
   out_329589871290340028[259] = 0;
   out_329589871290340028[260] = 0;
   out_329589871290340028[261] = 0;
   out_329589871290340028[262] = 0;
   out_329589871290340028[263] = 1.0;
   out_329589871290340028[264] = 0;
   out_329589871290340028[265] = 0;
   out_329589871290340028[266] = 0;
   out_329589871290340028[267] = 0;
   out_329589871290340028[268] = 0;
   out_329589871290340028[269] = 0;
   out_329589871290340028[270] = 0;
   out_329589871290340028[271] = 0;
   out_329589871290340028[272] = 0;
   out_329589871290340028[273] = 0;
   out_329589871290340028[274] = 0;
   out_329589871290340028[275] = 0;
   out_329589871290340028[276] = 0;
   out_329589871290340028[277] = 0;
   out_329589871290340028[278] = 0;
   out_329589871290340028[279] = 0;
   out_329589871290340028[280] = 0;
   out_329589871290340028[281] = 0;
   out_329589871290340028[282] = 0;
   out_329589871290340028[283] = 0;
   out_329589871290340028[284] = 0;
   out_329589871290340028[285] = 1.0;
   out_329589871290340028[286] = 0;
   out_329589871290340028[287] = 0;
   out_329589871290340028[288] = 0;
   out_329589871290340028[289] = 0;
   out_329589871290340028[290] = 0;
   out_329589871290340028[291] = 0;
   out_329589871290340028[292] = 0;
   out_329589871290340028[293] = 0;
   out_329589871290340028[294] = 0;
   out_329589871290340028[295] = 0;
   out_329589871290340028[296] = 0;
   out_329589871290340028[297] = 0;
   out_329589871290340028[298] = 0;
   out_329589871290340028[299] = 0;
   out_329589871290340028[300] = 0;
   out_329589871290340028[301] = 0;
   out_329589871290340028[302] = 0;
   out_329589871290340028[303] = 0;
   out_329589871290340028[304] = 0;
   out_329589871290340028[305] = 0;
   out_329589871290340028[306] = 0;
   out_329589871290340028[307] = 1.0;
   out_329589871290340028[308] = 0;
   out_329589871290340028[309] = 0;
   out_329589871290340028[310] = 0;
   out_329589871290340028[311] = 0;
   out_329589871290340028[312] = 0;
   out_329589871290340028[313] = 0;
   out_329589871290340028[314] = 0;
   out_329589871290340028[315] = 0;
   out_329589871290340028[316] = 0;
   out_329589871290340028[317] = 0;
   out_329589871290340028[318] = 0;
   out_329589871290340028[319] = 0;
   out_329589871290340028[320] = 0;
   out_329589871290340028[321] = 0;
   out_329589871290340028[322] = 0;
   out_329589871290340028[323] = 0;
   out_329589871290340028[324] = 0;
   out_329589871290340028[325] = 0;
   out_329589871290340028[326] = 0;
   out_329589871290340028[327] = 0;
   out_329589871290340028[328] = 0;
   out_329589871290340028[329] = 1.0;
   out_329589871290340028[330] = 0;
   out_329589871290340028[331] = 0;
   out_329589871290340028[332] = 0;
   out_329589871290340028[333] = 0;
   out_329589871290340028[334] = 0;
   out_329589871290340028[335] = 0;
   out_329589871290340028[336] = 0;
   out_329589871290340028[337] = 0;
   out_329589871290340028[338] = 0;
   out_329589871290340028[339] = 0;
   out_329589871290340028[340] = 0;
   out_329589871290340028[341] = 0;
   out_329589871290340028[342] = 0;
   out_329589871290340028[343] = 0;
   out_329589871290340028[344] = 0;
   out_329589871290340028[345] = 0;
   out_329589871290340028[346] = 0;
   out_329589871290340028[347] = 0;
   out_329589871290340028[348] = 0;
   out_329589871290340028[349] = 0;
   out_329589871290340028[350] = 0;
   out_329589871290340028[351] = 1.0;
   out_329589871290340028[352] = 0;
   out_329589871290340028[353] = 0;
   out_329589871290340028[354] = 0;
   out_329589871290340028[355] = 0;
   out_329589871290340028[356] = 0;
   out_329589871290340028[357] = 0;
   out_329589871290340028[358] = 0;
   out_329589871290340028[359] = 0;
   out_329589871290340028[360] = 0;
   out_329589871290340028[361] = 0;
   out_329589871290340028[362] = 0;
   out_329589871290340028[363] = 0;
   out_329589871290340028[364] = 0;
   out_329589871290340028[365] = 0;
   out_329589871290340028[366] = 0;
   out_329589871290340028[367] = 0;
   out_329589871290340028[368] = 0;
   out_329589871290340028[369] = 0;
   out_329589871290340028[370] = 0;
   out_329589871290340028[371] = 0;
   out_329589871290340028[372] = 0;
   out_329589871290340028[373] = 1.0;
   out_329589871290340028[374] = 0;
   out_329589871290340028[375] = 0;
   out_329589871290340028[376] = 0;
   out_329589871290340028[377] = 0;
   out_329589871290340028[378] = 0;
   out_329589871290340028[379] = 0;
   out_329589871290340028[380] = 0;
   out_329589871290340028[381] = 0;
   out_329589871290340028[382] = 0;
   out_329589871290340028[383] = 0;
   out_329589871290340028[384] = 0;
   out_329589871290340028[385] = 0;
   out_329589871290340028[386] = 0;
   out_329589871290340028[387] = 0;
   out_329589871290340028[388] = 0;
   out_329589871290340028[389] = 0;
   out_329589871290340028[390] = 0;
   out_329589871290340028[391] = 0;
   out_329589871290340028[392] = 0;
   out_329589871290340028[393] = 0;
   out_329589871290340028[394] = 0;
   out_329589871290340028[395] = 1.0;
   out_329589871290340028[396] = 0;
   out_329589871290340028[397] = 0;
   out_329589871290340028[398] = 0;
   out_329589871290340028[399] = 0;
   out_329589871290340028[400] = 0;
   out_329589871290340028[401] = 0;
   out_329589871290340028[402] = 0;
   out_329589871290340028[403] = 0;
   out_329589871290340028[404] = 0;
   out_329589871290340028[405] = 0;
   out_329589871290340028[406] = 0;
   out_329589871290340028[407] = 0;
   out_329589871290340028[408] = 0;
   out_329589871290340028[409] = 0;
   out_329589871290340028[410] = 0;
   out_329589871290340028[411] = 0;
   out_329589871290340028[412] = 0;
   out_329589871290340028[413] = 0;
   out_329589871290340028[414] = 0;
   out_329589871290340028[415] = 0;
   out_329589871290340028[416] = 0;
   out_329589871290340028[417] = 1.0;
   out_329589871290340028[418] = 0;
   out_329589871290340028[419] = 0;
   out_329589871290340028[420] = 0;
   out_329589871290340028[421] = 0;
   out_329589871290340028[422] = 0;
   out_329589871290340028[423] = 0;
   out_329589871290340028[424] = 0;
   out_329589871290340028[425] = 0;
   out_329589871290340028[426] = 0;
   out_329589871290340028[427] = 0;
   out_329589871290340028[428] = 0;
   out_329589871290340028[429] = 0;
   out_329589871290340028[430] = 0;
   out_329589871290340028[431] = 0;
   out_329589871290340028[432] = 0;
   out_329589871290340028[433] = 0;
   out_329589871290340028[434] = 0;
   out_329589871290340028[435] = 0;
   out_329589871290340028[436] = 0;
   out_329589871290340028[437] = 0;
   out_329589871290340028[438] = 0;
   out_329589871290340028[439] = 1.0;
   out_329589871290340028[440] = 0;
   out_329589871290340028[441] = 0;
   out_329589871290340028[442] = 0;
   out_329589871290340028[443] = 0;
   out_329589871290340028[444] = 0;
   out_329589871290340028[445] = 0;
   out_329589871290340028[446] = 0;
   out_329589871290340028[447] = 0;
   out_329589871290340028[448] = 0;
   out_329589871290340028[449] = 0;
   out_329589871290340028[450] = 0;
   out_329589871290340028[451] = 0;
   out_329589871290340028[452] = 0;
   out_329589871290340028[453] = 0;
   out_329589871290340028[454] = 0;
   out_329589871290340028[455] = 0;
   out_329589871290340028[456] = 0;
   out_329589871290340028[457] = 0;
   out_329589871290340028[458] = 0;
   out_329589871290340028[459] = 0;
   out_329589871290340028[460] = 0;
   out_329589871290340028[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5591562348585879218) {
   out_5591562348585879218[0] = dt*state[7] + state[0];
   out_5591562348585879218[1] = dt*state[8] + state[1];
   out_5591562348585879218[2] = dt*state[9] + state[2];
   out_5591562348585879218[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5591562348585879218[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5591562348585879218[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5591562348585879218[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5591562348585879218[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5591562348585879218[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5591562348585879218[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5591562348585879218[10] = state[10];
   out_5591562348585879218[11] = state[11];
   out_5591562348585879218[12] = state[12];
   out_5591562348585879218[13] = state[13];
   out_5591562348585879218[14] = state[14];
   out_5591562348585879218[15] = state[15];
   out_5591562348585879218[16] = state[16];
   out_5591562348585879218[17] = state[17];
   out_5591562348585879218[18] = state[18];
   out_5591562348585879218[19] = state[19];
   out_5591562348585879218[20] = state[20];
   out_5591562348585879218[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8977838800168055418) {
   out_8977838800168055418[0] = 1;
   out_8977838800168055418[1] = 0;
   out_8977838800168055418[2] = 0;
   out_8977838800168055418[3] = 0;
   out_8977838800168055418[4] = 0;
   out_8977838800168055418[5] = 0;
   out_8977838800168055418[6] = dt;
   out_8977838800168055418[7] = 0;
   out_8977838800168055418[8] = 0;
   out_8977838800168055418[9] = 0;
   out_8977838800168055418[10] = 0;
   out_8977838800168055418[11] = 0;
   out_8977838800168055418[12] = 0;
   out_8977838800168055418[13] = 0;
   out_8977838800168055418[14] = 0;
   out_8977838800168055418[15] = 0;
   out_8977838800168055418[16] = 0;
   out_8977838800168055418[17] = 0;
   out_8977838800168055418[18] = 0;
   out_8977838800168055418[19] = 0;
   out_8977838800168055418[20] = 0;
   out_8977838800168055418[21] = 0;
   out_8977838800168055418[22] = 1;
   out_8977838800168055418[23] = 0;
   out_8977838800168055418[24] = 0;
   out_8977838800168055418[25] = 0;
   out_8977838800168055418[26] = 0;
   out_8977838800168055418[27] = 0;
   out_8977838800168055418[28] = dt;
   out_8977838800168055418[29] = 0;
   out_8977838800168055418[30] = 0;
   out_8977838800168055418[31] = 0;
   out_8977838800168055418[32] = 0;
   out_8977838800168055418[33] = 0;
   out_8977838800168055418[34] = 0;
   out_8977838800168055418[35] = 0;
   out_8977838800168055418[36] = 0;
   out_8977838800168055418[37] = 0;
   out_8977838800168055418[38] = 0;
   out_8977838800168055418[39] = 0;
   out_8977838800168055418[40] = 0;
   out_8977838800168055418[41] = 0;
   out_8977838800168055418[42] = 0;
   out_8977838800168055418[43] = 0;
   out_8977838800168055418[44] = 1;
   out_8977838800168055418[45] = 0;
   out_8977838800168055418[46] = 0;
   out_8977838800168055418[47] = 0;
   out_8977838800168055418[48] = 0;
   out_8977838800168055418[49] = 0;
   out_8977838800168055418[50] = dt;
   out_8977838800168055418[51] = 0;
   out_8977838800168055418[52] = 0;
   out_8977838800168055418[53] = 0;
   out_8977838800168055418[54] = 0;
   out_8977838800168055418[55] = 0;
   out_8977838800168055418[56] = 0;
   out_8977838800168055418[57] = 0;
   out_8977838800168055418[58] = 0;
   out_8977838800168055418[59] = 0;
   out_8977838800168055418[60] = 0;
   out_8977838800168055418[61] = 0;
   out_8977838800168055418[62] = 0;
   out_8977838800168055418[63] = 0;
   out_8977838800168055418[64] = 0;
   out_8977838800168055418[65] = 0;
   out_8977838800168055418[66] = 1;
   out_8977838800168055418[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8977838800168055418[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8977838800168055418[69] = 0;
   out_8977838800168055418[70] = 0;
   out_8977838800168055418[71] = 0;
   out_8977838800168055418[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8977838800168055418[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8977838800168055418[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8977838800168055418[75] = 0;
   out_8977838800168055418[76] = 0;
   out_8977838800168055418[77] = 0;
   out_8977838800168055418[78] = 0;
   out_8977838800168055418[79] = 0;
   out_8977838800168055418[80] = 0;
   out_8977838800168055418[81] = 0;
   out_8977838800168055418[82] = 0;
   out_8977838800168055418[83] = 0;
   out_8977838800168055418[84] = 0;
   out_8977838800168055418[85] = 0;
   out_8977838800168055418[86] = 0;
   out_8977838800168055418[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8977838800168055418[88] = 1;
   out_8977838800168055418[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8977838800168055418[90] = 0;
   out_8977838800168055418[91] = 0;
   out_8977838800168055418[92] = 0;
   out_8977838800168055418[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8977838800168055418[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8977838800168055418[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8977838800168055418[96] = 0;
   out_8977838800168055418[97] = 0;
   out_8977838800168055418[98] = 0;
   out_8977838800168055418[99] = 0;
   out_8977838800168055418[100] = 0;
   out_8977838800168055418[101] = 0;
   out_8977838800168055418[102] = 0;
   out_8977838800168055418[103] = 0;
   out_8977838800168055418[104] = 0;
   out_8977838800168055418[105] = 0;
   out_8977838800168055418[106] = 0;
   out_8977838800168055418[107] = 0;
   out_8977838800168055418[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8977838800168055418[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8977838800168055418[110] = 1;
   out_8977838800168055418[111] = 0;
   out_8977838800168055418[112] = 0;
   out_8977838800168055418[113] = 0;
   out_8977838800168055418[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8977838800168055418[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8977838800168055418[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8977838800168055418[117] = 0;
   out_8977838800168055418[118] = 0;
   out_8977838800168055418[119] = 0;
   out_8977838800168055418[120] = 0;
   out_8977838800168055418[121] = 0;
   out_8977838800168055418[122] = 0;
   out_8977838800168055418[123] = 0;
   out_8977838800168055418[124] = 0;
   out_8977838800168055418[125] = 0;
   out_8977838800168055418[126] = 0;
   out_8977838800168055418[127] = 0;
   out_8977838800168055418[128] = 0;
   out_8977838800168055418[129] = 0;
   out_8977838800168055418[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8977838800168055418[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8977838800168055418[132] = 1;
   out_8977838800168055418[133] = 0;
   out_8977838800168055418[134] = 0;
   out_8977838800168055418[135] = 0;
   out_8977838800168055418[136] = 0;
   out_8977838800168055418[137] = 0;
   out_8977838800168055418[138] = 0;
   out_8977838800168055418[139] = 0;
   out_8977838800168055418[140] = 0;
   out_8977838800168055418[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8977838800168055418[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8977838800168055418[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8977838800168055418[144] = 0;
   out_8977838800168055418[145] = 0;
   out_8977838800168055418[146] = 0;
   out_8977838800168055418[147] = 0;
   out_8977838800168055418[148] = 0;
   out_8977838800168055418[149] = 0;
   out_8977838800168055418[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8977838800168055418[151] = 0;
   out_8977838800168055418[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8977838800168055418[153] = 0;
   out_8977838800168055418[154] = 1;
   out_8977838800168055418[155] = 0;
   out_8977838800168055418[156] = 0;
   out_8977838800168055418[157] = 0;
   out_8977838800168055418[158] = 0;
   out_8977838800168055418[159] = 0;
   out_8977838800168055418[160] = 0;
   out_8977838800168055418[161] = 0;
   out_8977838800168055418[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8977838800168055418[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8977838800168055418[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8977838800168055418[165] = 0;
   out_8977838800168055418[166] = 0;
   out_8977838800168055418[167] = 0;
   out_8977838800168055418[168] = 0;
   out_8977838800168055418[169] = 0;
   out_8977838800168055418[170] = 0;
   out_8977838800168055418[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8977838800168055418[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8977838800168055418[173] = 0;
   out_8977838800168055418[174] = 0;
   out_8977838800168055418[175] = 0;
   out_8977838800168055418[176] = 1;
   out_8977838800168055418[177] = 0;
   out_8977838800168055418[178] = 0;
   out_8977838800168055418[179] = 0;
   out_8977838800168055418[180] = 0;
   out_8977838800168055418[181] = 0;
   out_8977838800168055418[182] = 0;
   out_8977838800168055418[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8977838800168055418[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8977838800168055418[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8977838800168055418[186] = 0;
   out_8977838800168055418[187] = 0;
   out_8977838800168055418[188] = 0;
   out_8977838800168055418[189] = 0;
   out_8977838800168055418[190] = 0;
   out_8977838800168055418[191] = 0;
   out_8977838800168055418[192] = 0;
   out_8977838800168055418[193] = 0;
   out_8977838800168055418[194] = 0;
   out_8977838800168055418[195] = 0;
   out_8977838800168055418[196] = 0;
   out_8977838800168055418[197] = 0;
   out_8977838800168055418[198] = 1;
   out_8977838800168055418[199] = 0;
   out_8977838800168055418[200] = 0;
   out_8977838800168055418[201] = 0;
   out_8977838800168055418[202] = 0;
   out_8977838800168055418[203] = 0;
   out_8977838800168055418[204] = 0;
   out_8977838800168055418[205] = 0;
   out_8977838800168055418[206] = 0;
   out_8977838800168055418[207] = 0;
   out_8977838800168055418[208] = 0;
   out_8977838800168055418[209] = 0;
   out_8977838800168055418[210] = 0;
   out_8977838800168055418[211] = 0;
   out_8977838800168055418[212] = 0;
   out_8977838800168055418[213] = 0;
   out_8977838800168055418[214] = 0;
   out_8977838800168055418[215] = 0;
   out_8977838800168055418[216] = 0;
   out_8977838800168055418[217] = 0;
   out_8977838800168055418[218] = 0;
   out_8977838800168055418[219] = 0;
   out_8977838800168055418[220] = 1;
   out_8977838800168055418[221] = 0;
   out_8977838800168055418[222] = 0;
   out_8977838800168055418[223] = 0;
   out_8977838800168055418[224] = 0;
   out_8977838800168055418[225] = 0;
   out_8977838800168055418[226] = 0;
   out_8977838800168055418[227] = 0;
   out_8977838800168055418[228] = 0;
   out_8977838800168055418[229] = 0;
   out_8977838800168055418[230] = 0;
   out_8977838800168055418[231] = 0;
   out_8977838800168055418[232] = 0;
   out_8977838800168055418[233] = 0;
   out_8977838800168055418[234] = 0;
   out_8977838800168055418[235] = 0;
   out_8977838800168055418[236] = 0;
   out_8977838800168055418[237] = 0;
   out_8977838800168055418[238] = 0;
   out_8977838800168055418[239] = 0;
   out_8977838800168055418[240] = 0;
   out_8977838800168055418[241] = 0;
   out_8977838800168055418[242] = 1;
   out_8977838800168055418[243] = 0;
   out_8977838800168055418[244] = 0;
   out_8977838800168055418[245] = 0;
   out_8977838800168055418[246] = 0;
   out_8977838800168055418[247] = 0;
   out_8977838800168055418[248] = 0;
   out_8977838800168055418[249] = 0;
   out_8977838800168055418[250] = 0;
   out_8977838800168055418[251] = 0;
   out_8977838800168055418[252] = 0;
   out_8977838800168055418[253] = 0;
   out_8977838800168055418[254] = 0;
   out_8977838800168055418[255] = 0;
   out_8977838800168055418[256] = 0;
   out_8977838800168055418[257] = 0;
   out_8977838800168055418[258] = 0;
   out_8977838800168055418[259] = 0;
   out_8977838800168055418[260] = 0;
   out_8977838800168055418[261] = 0;
   out_8977838800168055418[262] = 0;
   out_8977838800168055418[263] = 0;
   out_8977838800168055418[264] = 1;
   out_8977838800168055418[265] = 0;
   out_8977838800168055418[266] = 0;
   out_8977838800168055418[267] = 0;
   out_8977838800168055418[268] = 0;
   out_8977838800168055418[269] = 0;
   out_8977838800168055418[270] = 0;
   out_8977838800168055418[271] = 0;
   out_8977838800168055418[272] = 0;
   out_8977838800168055418[273] = 0;
   out_8977838800168055418[274] = 0;
   out_8977838800168055418[275] = 0;
   out_8977838800168055418[276] = 0;
   out_8977838800168055418[277] = 0;
   out_8977838800168055418[278] = 0;
   out_8977838800168055418[279] = 0;
   out_8977838800168055418[280] = 0;
   out_8977838800168055418[281] = 0;
   out_8977838800168055418[282] = 0;
   out_8977838800168055418[283] = 0;
   out_8977838800168055418[284] = 0;
   out_8977838800168055418[285] = 0;
   out_8977838800168055418[286] = 1;
   out_8977838800168055418[287] = 0;
   out_8977838800168055418[288] = 0;
   out_8977838800168055418[289] = 0;
   out_8977838800168055418[290] = 0;
   out_8977838800168055418[291] = 0;
   out_8977838800168055418[292] = 0;
   out_8977838800168055418[293] = 0;
   out_8977838800168055418[294] = 0;
   out_8977838800168055418[295] = 0;
   out_8977838800168055418[296] = 0;
   out_8977838800168055418[297] = 0;
   out_8977838800168055418[298] = 0;
   out_8977838800168055418[299] = 0;
   out_8977838800168055418[300] = 0;
   out_8977838800168055418[301] = 0;
   out_8977838800168055418[302] = 0;
   out_8977838800168055418[303] = 0;
   out_8977838800168055418[304] = 0;
   out_8977838800168055418[305] = 0;
   out_8977838800168055418[306] = 0;
   out_8977838800168055418[307] = 0;
   out_8977838800168055418[308] = 1;
   out_8977838800168055418[309] = 0;
   out_8977838800168055418[310] = 0;
   out_8977838800168055418[311] = 0;
   out_8977838800168055418[312] = 0;
   out_8977838800168055418[313] = 0;
   out_8977838800168055418[314] = 0;
   out_8977838800168055418[315] = 0;
   out_8977838800168055418[316] = 0;
   out_8977838800168055418[317] = 0;
   out_8977838800168055418[318] = 0;
   out_8977838800168055418[319] = 0;
   out_8977838800168055418[320] = 0;
   out_8977838800168055418[321] = 0;
   out_8977838800168055418[322] = 0;
   out_8977838800168055418[323] = 0;
   out_8977838800168055418[324] = 0;
   out_8977838800168055418[325] = 0;
   out_8977838800168055418[326] = 0;
   out_8977838800168055418[327] = 0;
   out_8977838800168055418[328] = 0;
   out_8977838800168055418[329] = 0;
   out_8977838800168055418[330] = 1;
   out_8977838800168055418[331] = 0;
   out_8977838800168055418[332] = 0;
   out_8977838800168055418[333] = 0;
   out_8977838800168055418[334] = 0;
   out_8977838800168055418[335] = 0;
   out_8977838800168055418[336] = 0;
   out_8977838800168055418[337] = 0;
   out_8977838800168055418[338] = 0;
   out_8977838800168055418[339] = 0;
   out_8977838800168055418[340] = 0;
   out_8977838800168055418[341] = 0;
   out_8977838800168055418[342] = 0;
   out_8977838800168055418[343] = 0;
   out_8977838800168055418[344] = 0;
   out_8977838800168055418[345] = 0;
   out_8977838800168055418[346] = 0;
   out_8977838800168055418[347] = 0;
   out_8977838800168055418[348] = 0;
   out_8977838800168055418[349] = 0;
   out_8977838800168055418[350] = 0;
   out_8977838800168055418[351] = 0;
   out_8977838800168055418[352] = 1;
   out_8977838800168055418[353] = 0;
   out_8977838800168055418[354] = 0;
   out_8977838800168055418[355] = 0;
   out_8977838800168055418[356] = 0;
   out_8977838800168055418[357] = 0;
   out_8977838800168055418[358] = 0;
   out_8977838800168055418[359] = 0;
   out_8977838800168055418[360] = 0;
   out_8977838800168055418[361] = 0;
   out_8977838800168055418[362] = 0;
   out_8977838800168055418[363] = 0;
   out_8977838800168055418[364] = 0;
   out_8977838800168055418[365] = 0;
   out_8977838800168055418[366] = 0;
   out_8977838800168055418[367] = 0;
   out_8977838800168055418[368] = 0;
   out_8977838800168055418[369] = 0;
   out_8977838800168055418[370] = 0;
   out_8977838800168055418[371] = 0;
   out_8977838800168055418[372] = 0;
   out_8977838800168055418[373] = 0;
   out_8977838800168055418[374] = 1;
   out_8977838800168055418[375] = 0;
   out_8977838800168055418[376] = 0;
   out_8977838800168055418[377] = 0;
   out_8977838800168055418[378] = 0;
   out_8977838800168055418[379] = 0;
   out_8977838800168055418[380] = 0;
   out_8977838800168055418[381] = 0;
   out_8977838800168055418[382] = 0;
   out_8977838800168055418[383] = 0;
   out_8977838800168055418[384] = 0;
   out_8977838800168055418[385] = 0;
   out_8977838800168055418[386] = 0;
   out_8977838800168055418[387] = 0;
   out_8977838800168055418[388] = 0;
   out_8977838800168055418[389] = 0;
   out_8977838800168055418[390] = 0;
   out_8977838800168055418[391] = 0;
   out_8977838800168055418[392] = 0;
   out_8977838800168055418[393] = 0;
   out_8977838800168055418[394] = 0;
   out_8977838800168055418[395] = 0;
   out_8977838800168055418[396] = 1;
   out_8977838800168055418[397] = 0;
   out_8977838800168055418[398] = 0;
   out_8977838800168055418[399] = 0;
   out_8977838800168055418[400] = 0;
   out_8977838800168055418[401] = 0;
   out_8977838800168055418[402] = 0;
   out_8977838800168055418[403] = 0;
   out_8977838800168055418[404] = 0;
   out_8977838800168055418[405] = 0;
   out_8977838800168055418[406] = 0;
   out_8977838800168055418[407] = 0;
   out_8977838800168055418[408] = 0;
   out_8977838800168055418[409] = 0;
   out_8977838800168055418[410] = 0;
   out_8977838800168055418[411] = 0;
   out_8977838800168055418[412] = 0;
   out_8977838800168055418[413] = 0;
   out_8977838800168055418[414] = 0;
   out_8977838800168055418[415] = 0;
   out_8977838800168055418[416] = 0;
   out_8977838800168055418[417] = 0;
   out_8977838800168055418[418] = 1;
   out_8977838800168055418[419] = 0;
   out_8977838800168055418[420] = 0;
   out_8977838800168055418[421] = 0;
   out_8977838800168055418[422] = 0;
   out_8977838800168055418[423] = 0;
   out_8977838800168055418[424] = 0;
   out_8977838800168055418[425] = 0;
   out_8977838800168055418[426] = 0;
   out_8977838800168055418[427] = 0;
   out_8977838800168055418[428] = 0;
   out_8977838800168055418[429] = 0;
   out_8977838800168055418[430] = 0;
   out_8977838800168055418[431] = 0;
   out_8977838800168055418[432] = 0;
   out_8977838800168055418[433] = 0;
   out_8977838800168055418[434] = 0;
   out_8977838800168055418[435] = 0;
   out_8977838800168055418[436] = 0;
   out_8977838800168055418[437] = 0;
   out_8977838800168055418[438] = 0;
   out_8977838800168055418[439] = 0;
   out_8977838800168055418[440] = 1;
}
void h_4(double *state, double *unused, double *out_6568051884677364030) {
   out_6568051884677364030[0] = state[10] + state[13];
   out_6568051884677364030[1] = state[11] + state[14];
   out_6568051884677364030[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_600614122843459950) {
   out_600614122843459950[0] = 0;
   out_600614122843459950[1] = 0;
   out_600614122843459950[2] = 0;
   out_600614122843459950[3] = 0;
   out_600614122843459950[4] = 0;
   out_600614122843459950[5] = 0;
   out_600614122843459950[6] = 0;
   out_600614122843459950[7] = 0;
   out_600614122843459950[8] = 0;
   out_600614122843459950[9] = 0;
   out_600614122843459950[10] = 1;
   out_600614122843459950[11] = 0;
   out_600614122843459950[12] = 0;
   out_600614122843459950[13] = 1;
   out_600614122843459950[14] = 0;
   out_600614122843459950[15] = 0;
   out_600614122843459950[16] = 0;
   out_600614122843459950[17] = 0;
   out_600614122843459950[18] = 0;
   out_600614122843459950[19] = 0;
   out_600614122843459950[20] = 0;
   out_600614122843459950[21] = 0;
   out_600614122843459950[22] = 0;
   out_600614122843459950[23] = 0;
   out_600614122843459950[24] = 0;
   out_600614122843459950[25] = 0;
   out_600614122843459950[26] = 0;
   out_600614122843459950[27] = 0;
   out_600614122843459950[28] = 0;
   out_600614122843459950[29] = 0;
   out_600614122843459950[30] = 0;
   out_600614122843459950[31] = 0;
   out_600614122843459950[32] = 0;
   out_600614122843459950[33] = 1;
   out_600614122843459950[34] = 0;
   out_600614122843459950[35] = 0;
   out_600614122843459950[36] = 1;
   out_600614122843459950[37] = 0;
   out_600614122843459950[38] = 0;
   out_600614122843459950[39] = 0;
   out_600614122843459950[40] = 0;
   out_600614122843459950[41] = 0;
   out_600614122843459950[42] = 0;
   out_600614122843459950[43] = 0;
   out_600614122843459950[44] = 0;
   out_600614122843459950[45] = 0;
   out_600614122843459950[46] = 0;
   out_600614122843459950[47] = 0;
   out_600614122843459950[48] = 0;
   out_600614122843459950[49] = 0;
   out_600614122843459950[50] = 0;
   out_600614122843459950[51] = 0;
   out_600614122843459950[52] = 0;
   out_600614122843459950[53] = 0;
   out_600614122843459950[54] = 0;
   out_600614122843459950[55] = 0;
   out_600614122843459950[56] = 1;
   out_600614122843459950[57] = 0;
   out_600614122843459950[58] = 0;
   out_600614122843459950[59] = 1;
   out_600614122843459950[60] = 0;
   out_600614122843459950[61] = 0;
   out_600614122843459950[62] = 0;
   out_600614122843459950[63] = 0;
   out_600614122843459950[64] = 0;
   out_600614122843459950[65] = 0;
}
void h_9(double *state, double *unused, double *out_7986763754593148191) {
   out_7986763754593148191[0] = state[10];
   out_7986763754593148191[1] = state[11];
   out_7986763754593148191[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2288247429436619392) {
   out_2288247429436619392[0] = 0;
   out_2288247429436619392[1] = 0;
   out_2288247429436619392[2] = 0;
   out_2288247429436619392[3] = 0;
   out_2288247429436619392[4] = 0;
   out_2288247429436619392[5] = 0;
   out_2288247429436619392[6] = 0;
   out_2288247429436619392[7] = 0;
   out_2288247429436619392[8] = 0;
   out_2288247429436619392[9] = 0;
   out_2288247429436619392[10] = 1;
   out_2288247429436619392[11] = 0;
   out_2288247429436619392[12] = 0;
   out_2288247429436619392[13] = 0;
   out_2288247429436619392[14] = 0;
   out_2288247429436619392[15] = 0;
   out_2288247429436619392[16] = 0;
   out_2288247429436619392[17] = 0;
   out_2288247429436619392[18] = 0;
   out_2288247429436619392[19] = 0;
   out_2288247429436619392[20] = 0;
   out_2288247429436619392[21] = 0;
   out_2288247429436619392[22] = 0;
   out_2288247429436619392[23] = 0;
   out_2288247429436619392[24] = 0;
   out_2288247429436619392[25] = 0;
   out_2288247429436619392[26] = 0;
   out_2288247429436619392[27] = 0;
   out_2288247429436619392[28] = 0;
   out_2288247429436619392[29] = 0;
   out_2288247429436619392[30] = 0;
   out_2288247429436619392[31] = 0;
   out_2288247429436619392[32] = 0;
   out_2288247429436619392[33] = 1;
   out_2288247429436619392[34] = 0;
   out_2288247429436619392[35] = 0;
   out_2288247429436619392[36] = 0;
   out_2288247429436619392[37] = 0;
   out_2288247429436619392[38] = 0;
   out_2288247429436619392[39] = 0;
   out_2288247429436619392[40] = 0;
   out_2288247429436619392[41] = 0;
   out_2288247429436619392[42] = 0;
   out_2288247429436619392[43] = 0;
   out_2288247429436619392[44] = 0;
   out_2288247429436619392[45] = 0;
   out_2288247429436619392[46] = 0;
   out_2288247429436619392[47] = 0;
   out_2288247429436619392[48] = 0;
   out_2288247429436619392[49] = 0;
   out_2288247429436619392[50] = 0;
   out_2288247429436619392[51] = 0;
   out_2288247429436619392[52] = 0;
   out_2288247429436619392[53] = 0;
   out_2288247429436619392[54] = 0;
   out_2288247429436619392[55] = 0;
   out_2288247429436619392[56] = 1;
   out_2288247429436619392[57] = 0;
   out_2288247429436619392[58] = 0;
   out_2288247429436619392[59] = 0;
   out_2288247429436619392[60] = 0;
   out_2288247429436619392[61] = 0;
   out_2288247429436619392[62] = 0;
   out_2288247429436619392[63] = 0;
   out_2288247429436619392[64] = 0;
   out_2288247429436619392[65] = 0;
}
void h_10(double *state, double *unused, double *out_1696844284174150102) {
   out_1696844284174150102[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1696844284174150102[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1696844284174150102[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8296381704530721339) {
   out_8296381704530721339[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8296381704530721339[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8296381704530721339[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8296381704530721339[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8296381704530721339[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8296381704530721339[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8296381704530721339[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8296381704530721339[7] = 0;
   out_8296381704530721339[8] = 0;
   out_8296381704530721339[9] = 0;
   out_8296381704530721339[10] = 0;
   out_8296381704530721339[11] = 0;
   out_8296381704530721339[12] = 0;
   out_8296381704530721339[13] = 0;
   out_8296381704530721339[14] = 0;
   out_8296381704530721339[15] = 0;
   out_8296381704530721339[16] = 1;
   out_8296381704530721339[17] = 0;
   out_8296381704530721339[18] = 0;
   out_8296381704530721339[19] = 1;
   out_8296381704530721339[20] = 0;
   out_8296381704530721339[21] = 0;
   out_8296381704530721339[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8296381704530721339[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8296381704530721339[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8296381704530721339[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8296381704530721339[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8296381704530721339[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8296381704530721339[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8296381704530721339[29] = 0;
   out_8296381704530721339[30] = 0;
   out_8296381704530721339[31] = 0;
   out_8296381704530721339[32] = 0;
   out_8296381704530721339[33] = 0;
   out_8296381704530721339[34] = 0;
   out_8296381704530721339[35] = 0;
   out_8296381704530721339[36] = 0;
   out_8296381704530721339[37] = 0;
   out_8296381704530721339[38] = 0;
   out_8296381704530721339[39] = 1;
   out_8296381704530721339[40] = 0;
   out_8296381704530721339[41] = 0;
   out_8296381704530721339[42] = 1;
   out_8296381704530721339[43] = 0;
   out_8296381704530721339[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8296381704530721339[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8296381704530721339[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8296381704530721339[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8296381704530721339[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8296381704530721339[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8296381704530721339[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8296381704530721339[51] = 0;
   out_8296381704530721339[52] = 0;
   out_8296381704530721339[53] = 0;
   out_8296381704530721339[54] = 0;
   out_8296381704530721339[55] = 0;
   out_8296381704530721339[56] = 0;
   out_8296381704530721339[57] = 0;
   out_8296381704530721339[58] = 0;
   out_8296381704530721339[59] = 0;
   out_8296381704530721339[60] = 0;
   out_8296381704530721339[61] = 0;
   out_8296381704530721339[62] = 1;
   out_8296381704530721339[63] = 0;
   out_8296381704530721339[64] = 0;
   out_8296381704530721339[65] = 1;
}
void h_12(double *state, double *unused, double *out_7690125021142739883) {
   out_7690125021142739883[0] = state[0];
   out_7690125021142739883[1] = state[1];
   out_7690125021142739883[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7066514190838990542) {
   out_7066514190838990542[0] = 1;
   out_7066514190838990542[1] = 0;
   out_7066514190838990542[2] = 0;
   out_7066514190838990542[3] = 0;
   out_7066514190838990542[4] = 0;
   out_7066514190838990542[5] = 0;
   out_7066514190838990542[6] = 0;
   out_7066514190838990542[7] = 0;
   out_7066514190838990542[8] = 0;
   out_7066514190838990542[9] = 0;
   out_7066514190838990542[10] = 0;
   out_7066514190838990542[11] = 0;
   out_7066514190838990542[12] = 0;
   out_7066514190838990542[13] = 0;
   out_7066514190838990542[14] = 0;
   out_7066514190838990542[15] = 0;
   out_7066514190838990542[16] = 0;
   out_7066514190838990542[17] = 0;
   out_7066514190838990542[18] = 0;
   out_7066514190838990542[19] = 0;
   out_7066514190838990542[20] = 0;
   out_7066514190838990542[21] = 0;
   out_7066514190838990542[22] = 0;
   out_7066514190838990542[23] = 1;
   out_7066514190838990542[24] = 0;
   out_7066514190838990542[25] = 0;
   out_7066514190838990542[26] = 0;
   out_7066514190838990542[27] = 0;
   out_7066514190838990542[28] = 0;
   out_7066514190838990542[29] = 0;
   out_7066514190838990542[30] = 0;
   out_7066514190838990542[31] = 0;
   out_7066514190838990542[32] = 0;
   out_7066514190838990542[33] = 0;
   out_7066514190838990542[34] = 0;
   out_7066514190838990542[35] = 0;
   out_7066514190838990542[36] = 0;
   out_7066514190838990542[37] = 0;
   out_7066514190838990542[38] = 0;
   out_7066514190838990542[39] = 0;
   out_7066514190838990542[40] = 0;
   out_7066514190838990542[41] = 0;
   out_7066514190838990542[42] = 0;
   out_7066514190838990542[43] = 0;
   out_7066514190838990542[44] = 0;
   out_7066514190838990542[45] = 0;
   out_7066514190838990542[46] = 1;
   out_7066514190838990542[47] = 0;
   out_7066514190838990542[48] = 0;
   out_7066514190838990542[49] = 0;
   out_7066514190838990542[50] = 0;
   out_7066514190838990542[51] = 0;
   out_7066514190838990542[52] = 0;
   out_7066514190838990542[53] = 0;
   out_7066514190838990542[54] = 0;
   out_7066514190838990542[55] = 0;
   out_7066514190838990542[56] = 0;
   out_7066514190838990542[57] = 0;
   out_7066514190838990542[58] = 0;
   out_7066514190838990542[59] = 0;
   out_7066514190838990542[60] = 0;
   out_7066514190838990542[61] = 0;
   out_7066514190838990542[62] = 0;
   out_7066514190838990542[63] = 0;
   out_7066514190838990542[64] = 0;
   out_7066514190838990542[65] = 0;
}
void h_35(double *state, double *unused, double *out_5360877677096077428) {
   out_5360877677096077428[0] = state[7];
   out_5360877677096077428[1] = state[8];
   out_5360877677096077428[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2766047934529147426) {
   out_2766047934529147426[0] = 0;
   out_2766047934529147426[1] = 0;
   out_2766047934529147426[2] = 0;
   out_2766047934529147426[3] = 0;
   out_2766047934529147426[4] = 0;
   out_2766047934529147426[5] = 0;
   out_2766047934529147426[6] = 0;
   out_2766047934529147426[7] = 1;
   out_2766047934529147426[8] = 0;
   out_2766047934529147426[9] = 0;
   out_2766047934529147426[10] = 0;
   out_2766047934529147426[11] = 0;
   out_2766047934529147426[12] = 0;
   out_2766047934529147426[13] = 0;
   out_2766047934529147426[14] = 0;
   out_2766047934529147426[15] = 0;
   out_2766047934529147426[16] = 0;
   out_2766047934529147426[17] = 0;
   out_2766047934529147426[18] = 0;
   out_2766047934529147426[19] = 0;
   out_2766047934529147426[20] = 0;
   out_2766047934529147426[21] = 0;
   out_2766047934529147426[22] = 0;
   out_2766047934529147426[23] = 0;
   out_2766047934529147426[24] = 0;
   out_2766047934529147426[25] = 0;
   out_2766047934529147426[26] = 0;
   out_2766047934529147426[27] = 0;
   out_2766047934529147426[28] = 0;
   out_2766047934529147426[29] = 0;
   out_2766047934529147426[30] = 1;
   out_2766047934529147426[31] = 0;
   out_2766047934529147426[32] = 0;
   out_2766047934529147426[33] = 0;
   out_2766047934529147426[34] = 0;
   out_2766047934529147426[35] = 0;
   out_2766047934529147426[36] = 0;
   out_2766047934529147426[37] = 0;
   out_2766047934529147426[38] = 0;
   out_2766047934529147426[39] = 0;
   out_2766047934529147426[40] = 0;
   out_2766047934529147426[41] = 0;
   out_2766047934529147426[42] = 0;
   out_2766047934529147426[43] = 0;
   out_2766047934529147426[44] = 0;
   out_2766047934529147426[45] = 0;
   out_2766047934529147426[46] = 0;
   out_2766047934529147426[47] = 0;
   out_2766047934529147426[48] = 0;
   out_2766047934529147426[49] = 0;
   out_2766047934529147426[50] = 0;
   out_2766047934529147426[51] = 0;
   out_2766047934529147426[52] = 0;
   out_2766047934529147426[53] = 1;
   out_2766047934529147426[54] = 0;
   out_2766047934529147426[55] = 0;
   out_2766047934529147426[56] = 0;
   out_2766047934529147426[57] = 0;
   out_2766047934529147426[58] = 0;
   out_2766047934529147426[59] = 0;
   out_2766047934529147426[60] = 0;
   out_2766047934529147426[61] = 0;
   out_2766047934529147426[62] = 0;
   out_2766047934529147426[63] = 0;
   out_2766047934529147426[64] = 0;
   out_2766047934529147426[65] = 0;
}
void h_32(double *state, double *unused, double *out_3283961989127718109) {
   out_3283961989127718109[0] = state[3];
   out_3283961989127718109[1] = state[4];
   out_3283961989127718109[2] = state[5];
   out_3283961989127718109[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2897212719469887895) {
   out_2897212719469887895[0] = 0;
   out_2897212719469887895[1] = 0;
   out_2897212719469887895[2] = 0;
   out_2897212719469887895[3] = 1;
   out_2897212719469887895[4] = 0;
   out_2897212719469887895[5] = 0;
   out_2897212719469887895[6] = 0;
   out_2897212719469887895[7] = 0;
   out_2897212719469887895[8] = 0;
   out_2897212719469887895[9] = 0;
   out_2897212719469887895[10] = 0;
   out_2897212719469887895[11] = 0;
   out_2897212719469887895[12] = 0;
   out_2897212719469887895[13] = 0;
   out_2897212719469887895[14] = 0;
   out_2897212719469887895[15] = 0;
   out_2897212719469887895[16] = 0;
   out_2897212719469887895[17] = 0;
   out_2897212719469887895[18] = 0;
   out_2897212719469887895[19] = 0;
   out_2897212719469887895[20] = 0;
   out_2897212719469887895[21] = 0;
   out_2897212719469887895[22] = 0;
   out_2897212719469887895[23] = 0;
   out_2897212719469887895[24] = 0;
   out_2897212719469887895[25] = 0;
   out_2897212719469887895[26] = 1;
   out_2897212719469887895[27] = 0;
   out_2897212719469887895[28] = 0;
   out_2897212719469887895[29] = 0;
   out_2897212719469887895[30] = 0;
   out_2897212719469887895[31] = 0;
   out_2897212719469887895[32] = 0;
   out_2897212719469887895[33] = 0;
   out_2897212719469887895[34] = 0;
   out_2897212719469887895[35] = 0;
   out_2897212719469887895[36] = 0;
   out_2897212719469887895[37] = 0;
   out_2897212719469887895[38] = 0;
   out_2897212719469887895[39] = 0;
   out_2897212719469887895[40] = 0;
   out_2897212719469887895[41] = 0;
   out_2897212719469887895[42] = 0;
   out_2897212719469887895[43] = 0;
   out_2897212719469887895[44] = 0;
   out_2897212719469887895[45] = 0;
   out_2897212719469887895[46] = 0;
   out_2897212719469887895[47] = 0;
   out_2897212719469887895[48] = 0;
   out_2897212719469887895[49] = 1;
   out_2897212719469887895[50] = 0;
   out_2897212719469887895[51] = 0;
   out_2897212719469887895[52] = 0;
   out_2897212719469887895[53] = 0;
   out_2897212719469887895[54] = 0;
   out_2897212719469887895[55] = 0;
   out_2897212719469887895[56] = 0;
   out_2897212719469887895[57] = 0;
   out_2897212719469887895[58] = 0;
   out_2897212719469887895[59] = 0;
   out_2897212719469887895[60] = 0;
   out_2897212719469887895[61] = 0;
   out_2897212719469887895[62] = 0;
   out_2897212719469887895[63] = 0;
   out_2897212719469887895[64] = 0;
   out_2897212719469887895[65] = 0;
   out_2897212719469887895[66] = 0;
   out_2897212719469887895[67] = 0;
   out_2897212719469887895[68] = 0;
   out_2897212719469887895[69] = 0;
   out_2897212719469887895[70] = 0;
   out_2897212719469887895[71] = 0;
   out_2897212719469887895[72] = 1;
   out_2897212719469887895[73] = 0;
   out_2897212719469887895[74] = 0;
   out_2897212719469887895[75] = 0;
   out_2897212719469887895[76] = 0;
   out_2897212719469887895[77] = 0;
   out_2897212719469887895[78] = 0;
   out_2897212719469887895[79] = 0;
   out_2897212719469887895[80] = 0;
   out_2897212719469887895[81] = 0;
   out_2897212719469887895[82] = 0;
   out_2897212719469887895[83] = 0;
   out_2897212719469887895[84] = 0;
   out_2897212719469887895[85] = 0;
   out_2897212719469887895[86] = 0;
   out_2897212719469887895[87] = 0;
}
void h_13(double *state, double *unused, double *out_4973029580970525387) {
   out_4973029580970525387[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4973029580970525387[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4973029580970525387[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_996979337112772560) {
   out_996979337112772560[0] = 0;
   out_996979337112772560[1] = 0;
   out_996979337112772560[2] = 0;
   out_996979337112772560[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_996979337112772560[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_996979337112772560[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_996979337112772560[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_996979337112772560[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_996979337112772560[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_996979337112772560[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_996979337112772560[10] = 0;
   out_996979337112772560[11] = 0;
   out_996979337112772560[12] = 0;
   out_996979337112772560[13] = 0;
   out_996979337112772560[14] = 0;
   out_996979337112772560[15] = 0;
   out_996979337112772560[16] = 0;
   out_996979337112772560[17] = 0;
   out_996979337112772560[18] = 0;
   out_996979337112772560[19] = 0;
   out_996979337112772560[20] = 0;
   out_996979337112772560[21] = 0;
   out_996979337112772560[22] = 0;
   out_996979337112772560[23] = 0;
   out_996979337112772560[24] = 0;
   out_996979337112772560[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_996979337112772560[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_996979337112772560[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_996979337112772560[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_996979337112772560[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_996979337112772560[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_996979337112772560[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_996979337112772560[32] = 0;
   out_996979337112772560[33] = 0;
   out_996979337112772560[34] = 0;
   out_996979337112772560[35] = 0;
   out_996979337112772560[36] = 0;
   out_996979337112772560[37] = 0;
   out_996979337112772560[38] = 0;
   out_996979337112772560[39] = 0;
   out_996979337112772560[40] = 0;
   out_996979337112772560[41] = 0;
   out_996979337112772560[42] = 0;
   out_996979337112772560[43] = 0;
   out_996979337112772560[44] = 0;
   out_996979337112772560[45] = 0;
   out_996979337112772560[46] = 0;
   out_996979337112772560[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_996979337112772560[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_996979337112772560[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_996979337112772560[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_996979337112772560[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_996979337112772560[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_996979337112772560[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_996979337112772560[54] = 0;
   out_996979337112772560[55] = 0;
   out_996979337112772560[56] = 0;
   out_996979337112772560[57] = 0;
   out_996979337112772560[58] = 0;
   out_996979337112772560[59] = 0;
   out_996979337112772560[60] = 0;
   out_996979337112772560[61] = 0;
   out_996979337112772560[62] = 0;
   out_996979337112772560[63] = 0;
   out_996979337112772560[64] = 0;
   out_996979337112772560[65] = 0;
}
void h_14(double *state, double *unused, double *out_7986763754593148191) {
   out_7986763754593148191[0] = state[10];
   out_7986763754593148191[1] = state[11];
   out_7986763754593148191[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2288247429436619392) {
   out_2288247429436619392[0] = 0;
   out_2288247429436619392[1] = 0;
   out_2288247429436619392[2] = 0;
   out_2288247429436619392[3] = 0;
   out_2288247429436619392[4] = 0;
   out_2288247429436619392[5] = 0;
   out_2288247429436619392[6] = 0;
   out_2288247429436619392[7] = 0;
   out_2288247429436619392[8] = 0;
   out_2288247429436619392[9] = 0;
   out_2288247429436619392[10] = 1;
   out_2288247429436619392[11] = 0;
   out_2288247429436619392[12] = 0;
   out_2288247429436619392[13] = 0;
   out_2288247429436619392[14] = 0;
   out_2288247429436619392[15] = 0;
   out_2288247429436619392[16] = 0;
   out_2288247429436619392[17] = 0;
   out_2288247429436619392[18] = 0;
   out_2288247429436619392[19] = 0;
   out_2288247429436619392[20] = 0;
   out_2288247429436619392[21] = 0;
   out_2288247429436619392[22] = 0;
   out_2288247429436619392[23] = 0;
   out_2288247429436619392[24] = 0;
   out_2288247429436619392[25] = 0;
   out_2288247429436619392[26] = 0;
   out_2288247429436619392[27] = 0;
   out_2288247429436619392[28] = 0;
   out_2288247429436619392[29] = 0;
   out_2288247429436619392[30] = 0;
   out_2288247429436619392[31] = 0;
   out_2288247429436619392[32] = 0;
   out_2288247429436619392[33] = 1;
   out_2288247429436619392[34] = 0;
   out_2288247429436619392[35] = 0;
   out_2288247429436619392[36] = 0;
   out_2288247429436619392[37] = 0;
   out_2288247429436619392[38] = 0;
   out_2288247429436619392[39] = 0;
   out_2288247429436619392[40] = 0;
   out_2288247429436619392[41] = 0;
   out_2288247429436619392[42] = 0;
   out_2288247429436619392[43] = 0;
   out_2288247429436619392[44] = 0;
   out_2288247429436619392[45] = 0;
   out_2288247429436619392[46] = 0;
   out_2288247429436619392[47] = 0;
   out_2288247429436619392[48] = 0;
   out_2288247429436619392[49] = 0;
   out_2288247429436619392[50] = 0;
   out_2288247429436619392[51] = 0;
   out_2288247429436619392[52] = 0;
   out_2288247429436619392[53] = 0;
   out_2288247429436619392[54] = 0;
   out_2288247429436619392[55] = 0;
   out_2288247429436619392[56] = 1;
   out_2288247429436619392[57] = 0;
   out_2288247429436619392[58] = 0;
   out_2288247429436619392[59] = 0;
   out_2288247429436619392[60] = 0;
   out_2288247429436619392[61] = 0;
   out_2288247429436619392[62] = 0;
   out_2288247429436619392[63] = 0;
   out_2288247429436619392[64] = 0;
   out_2288247429436619392[65] = 0;
}
void h_33(double *state, double *unused, double *out_5581355254746335032) {
   out_5581355254746335032[0] = state[16];
   out_5581355254746335032[1] = state[17];
   out_5581355254746335032[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5484109845906689761) {
   out_5484109845906689761[0] = 0;
   out_5484109845906689761[1] = 0;
   out_5484109845906689761[2] = 0;
   out_5484109845906689761[3] = 0;
   out_5484109845906689761[4] = 0;
   out_5484109845906689761[5] = 0;
   out_5484109845906689761[6] = 0;
   out_5484109845906689761[7] = 0;
   out_5484109845906689761[8] = 0;
   out_5484109845906689761[9] = 0;
   out_5484109845906689761[10] = 0;
   out_5484109845906689761[11] = 0;
   out_5484109845906689761[12] = 0;
   out_5484109845906689761[13] = 0;
   out_5484109845906689761[14] = 0;
   out_5484109845906689761[15] = 0;
   out_5484109845906689761[16] = 1;
   out_5484109845906689761[17] = 0;
   out_5484109845906689761[18] = 0;
   out_5484109845906689761[19] = 0;
   out_5484109845906689761[20] = 0;
   out_5484109845906689761[21] = 0;
   out_5484109845906689761[22] = 0;
   out_5484109845906689761[23] = 0;
   out_5484109845906689761[24] = 0;
   out_5484109845906689761[25] = 0;
   out_5484109845906689761[26] = 0;
   out_5484109845906689761[27] = 0;
   out_5484109845906689761[28] = 0;
   out_5484109845906689761[29] = 0;
   out_5484109845906689761[30] = 0;
   out_5484109845906689761[31] = 0;
   out_5484109845906689761[32] = 0;
   out_5484109845906689761[33] = 0;
   out_5484109845906689761[34] = 0;
   out_5484109845906689761[35] = 0;
   out_5484109845906689761[36] = 0;
   out_5484109845906689761[37] = 0;
   out_5484109845906689761[38] = 0;
   out_5484109845906689761[39] = 1;
   out_5484109845906689761[40] = 0;
   out_5484109845906689761[41] = 0;
   out_5484109845906689761[42] = 0;
   out_5484109845906689761[43] = 0;
   out_5484109845906689761[44] = 0;
   out_5484109845906689761[45] = 0;
   out_5484109845906689761[46] = 0;
   out_5484109845906689761[47] = 0;
   out_5484109845906689761[48] = 0;
   out_5484109845906689761[49] = 0;
   out_5484109845906689761[50] = 0;
   out_5484109845906689761[51] = 0;
   out_5484109845906689761[52] = 0;
   out_5484109845906689761[53] = 0;
   out_5484109845906689761[54] = 0;
   out_5484109845906689761[55] = 0;
   out_5484109845906689761[56] = 0;
   out_5484109845906689761[57] = 0;
   out_5484109845906689761[58] = 0;
   out_5484109845906689761[59] = 0;
   out_5484109845906689761[60] = 0;
   out_5484109845906689761[61] = 0;
   out_5484109845906689761[62] = 1;
   out_5484109845906689761[63] = 0;
   out_5484109845906689761[64] = 0;
   out_5484109845906689761[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3585317521272958006) {
  H(in_vec, out_3585317521272958006);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5894257164096913053) {
  err_fun(nom_x, delta_x, out_5894257164096913053);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5254837349202704713) {
  inv_err_fun(nom_x, true_x, out_5254837349202704713);
}
void live_H_mod_fun(double *state, double *out_329589871290340028) {
  H_mod_fun(state, out_329589871290340028);
}
void live_f_fun(double *state, double dt, double *out_5591562348585879218) {
  f_fun(state,  dt, out_5591562348585879218);
}
void live_F_fun(double *state, double dt, double *out_8977838800168055418) {
  F_fun(state,  dt, out_8977838800168055418);
}
void live_h_4(double *state, double *unused, double *out_6568051884677364030) {
  h_4(state, unused, out_6568051884677364030);
}
void live_H_4(double *state, double *unused, double *out_600614122843459950) {
  H_4(state, unused, out_600614122843459950);
}
void live_h_9(double *state, double *unused, double *out_7986763754593148191) {
  h_9(state, unused, out_7986763754593148191);
}
void live_H_9(double *state, double *unused, double *out_2288247429436619392) {
  H_9(state, unused, out_2288247429436619392);
}
void live_h_10(double *state, double *unused, double *out_1696844284174150102) {
  h_10(state, unused, out_1696844284174150102);
}
void live_H_10(double *state, double *unused, double *out_8296381704530721339) {
  H_10(state, unused, out_8296381704530721339);
}
void live_h_12(double *state, double *unused, double *out_7690125021142739883) {
  h_12(state, unused, out_7690125021142739883);
}
void live_H_12(double *state, double *unused, double *out_7066514190838990542) {
  H_12(state, unused, out_7066514190838990542);
}
void live_h_35(double *state, double *unused, double *out_5360877677096077428) {
  h_35(state, unused, out_5360877677096077428);
}
void live_H_35(double *state, double *unused, double *out_2766047934529147426) {
  H_35(state, unused, out_2766047934529147426);
}
void live_h_32(double *state, double *unused, double *out_3283961989127718109) {
  h_32(state, unused, out_3283961989127718109);
}
void live_H_32(double *state, double *unused, double *out_2897212719469887895) {
  H_32(state, unused, out_2897212719469887895);
}
void live_h_13(double *state, double *unused, double *out_4973029580970525387) {
  h_13(state, unused, out_4973029580970525387);
}
void live_H_13(double *state, double *unused, double *out_996979337112772560) {
  H_13(state, unused, out_996979337112772560);
}
void live_h_14(double *state, double *unused, double *out_7986763754593148191) {
  h_14(state, unused, out_7986763754593148191);
}
void live_H_14(double *state, double *unused, double *out_2288247429436619392) {
  H_14(state, unused, out_2288247429436619392);
}
void live_h_33(double *state, double *unused, double *out_5581355254746335032) {
  h_33(state, unused, out_5581355254746335032);
}
void live_H_33(double *state, double *unused, double *out_5484109845906689761) {
  H_33(state, unused, out_5484109845906689761);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
